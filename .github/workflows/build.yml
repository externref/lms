name: Build and Release Binaries with Meson

on:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:
  build:
    name: Build binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            meson_setup: 'meson setup builddir --buildtype=release'
            meson_build: 'meson compile -C builddir'
            install_deps: |
              sudo apt update
              sudo apt install -y ninja-build pkg-config meson libgtk-4-dev libsqlite3-dev
          - os: windows-latest
            meson_setup: 'meson setup builddir --buildtype=release'
            meson_build: 'meson compile -C builddir'
            install_deps: |
              choco install -y ninja meson pkg-config
              choco install gtk-runtime
              # For SQLite3, download the binary and place it in path
              Invoke-WebRequest -Uri https://sqlite.org/2023/sqlite-dll-win64-x64-3410200.zip -OutFile sqlite.zip
              Expand-Archive sqlite.zip -DestinationPath C:\sqlite3
              $env:Path += ";C:\sqlite3"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: ${{ matrix.install_deps }}

      - name: Set up Meson build system
        run: ${{ matrix.meson_setup }}

      - name: Build binary
        run: ${{ matrix.meson_build }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-binary
          path: builddir/

  release:
    name: Release binaries
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-binary
          path: binaries/linux
        if: matrix.os == 'ubuntu-latest'

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-binary
          path: binaries/windows
        if: matrix.os == 'windows-latest'

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binaries/linux/**
            binaries/windows/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
